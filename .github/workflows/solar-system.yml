name: Solar System Workflow

on:
    workflow_dispatch:
    push:
        branches: [main, 'feature/*']
env:
        MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
        MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
        MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
        DOCKERHUB_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        DOCKERHUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
jobs:
    unit-testing:
        name: Unit Testing
        strategy:
            matrix:
                os: [ubuntu-latest]
                nodejs_version: [18, 20]
                # exclude:
                #     - nodejs_version: 18
                #       os: macos-latest
        runs-on: ${{ matrix.os }}
        steps:
            - name: Checkout repo
              uses: actions/checkout@v4

            - name: Set NodeJS Version -${{ matrix.nodejs_version }}
              uses: actions/setup-node@v4
              with:
                node-version: ${{ matrix.nodejs_version }}
            
            - name: Cache NPM dependencies
              uses: actions/cache@v4
              with:
                path: node_modules
                key: ${{ runner.os }}-node_modules-${{hashfiles('package-lock.json')}}   

            - name: Install dependencies
              run: npm install

            - name: Unit testing
              id: nodejs-unit-testing-step
              run: npm test
            
            - name: Archive test result
              if: always()
            ####  if: ${{ always() }} && (steps.nodejs-unit-testing-step.outcome == 'failure' || steps.nodejs-unit-testing-step.outcome == 'success')
              uses: actions/upload-artifact@v4
              with:
                name: Mocha-Test_Result
                path: test-results.xml
                overwrite: true


    code-coverage:
        name: Code Coverage
        strategy:
            matrix:
                os: [ubuntu-latest]
                nodejs_version: [18]
                # exclude:
                #     - os: macos-latest
                #       nodejs_version: 18
        runs-on: ${{ matrix.os }}
        steps:
            - name: Checkout repo
              uses: actions/checkout@v4

            - name: Set NodeJs Version -${{ matrix.nodejs_version}}
              uses: actions/setup-node@v4

            - name: Cache NPM dependencies
              uses: actions/cache@v4
              with:
                path: node_modules
                key: ${{ runner.os }}-node_modules-${{hashfiles('package-lock.json')}}
            
            - name: Install dependencies
              run: npm install

            - name: Check code coverage
              continue-on-error: true
              run: npm run coverage
            
            - name: Archive coverage results
              uses: actions/upload-artifact@v4
              with:
                name: Codecoverage-Result
                path: coverage
                overwrite: true
                retention-days: 5

    docker:
      name: Containerization
      runs-on: ubuntu-latest
      needs: [unit-testing, code-coverage]
      steps:
        - name: Checkout repo
          uses: actions/checkout@v4
          
        - name: Login to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ env.DOCKERHUB_USERNAME }}
            password: ${{ env.DOCKERHUB_PASSWORD }}

        - name: Docker Building for testing
          uses: docker/build-push-action@v5
          with:
            context: .
            push: false
            tags: ${{ env.DOCKERHUB_USERNAME }}/solar-system:${{github.sha}}

        